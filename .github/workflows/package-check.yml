name: "Upgrade packages"

on:
  schedule:
    - cron: "0 0 12 ? * MON *"

permissions:
  pull-requests: write

jobs:
  main:
    name: Check for updates
    runs-on: ubuntu-latest
    steps:
      - name: Install JQ
        run: sudo apt-get install jq

      - name: Check for updates
        run: |
          #!/bin/bash

          # Function to get the latest version from Packagist
          get_latest_version() {
              packageName=$1
              latestVersion=$(curl -s "https://repo.packagist.org/p/${packageName}.json" | jq -r '.packages["'"$packageName"'"][0].version')
              echo "$latestVersion"
          }

          # Check if composer.json exists
          if [ -f "composer.json" ]; then
              # Read composer.json and update versions
              while IFS=":" read -r key value; do
                  key=$(echo "$key" | tr -d '," ')
                  value=$(echo "$value" | tr -d '," ')

                  if [ "$key" == "require" ]; then
                      # Iterate through package names and update versions
                      while IFS=":" read -r package version; do
                          package=$(echo "$package" | tr -d '," ')
                          version=$(echo "$version" | tr -d '," ')
                          latest_version=$(get_latest_version "$package")

                          if [ "$latest_version" != "null" ]; then
                              # Update version if a newer version exists
                              sed -i "s/\"$package\": \"$version\"/\"$package\": \"$latest_version\"/g" composer.json
                              echo "Updated $package from $version to $latest_version"
                          else
                              echo "No update available for $package"
                          fi
                      done < <(echo "$value" | jq -r 'to_entries[] | .key + " " + .value')
                  fi
              done < <(jq -r 'to_entries[] | .key + " " + (.value | tostring)' composer.json)
          else
              echo "composer.json not found!"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit changes
        run: |
          git config --global user.name "Achyut Neupane"
          git config --global user.email "achyutkneupane@gmail.com"
          git add composer.json
          git commit -m "deps: Update dependency versions"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}