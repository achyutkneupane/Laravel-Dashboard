name: Upgrade packages
'on':
  push:
    branches:
      - ci-cd
permissions:
  pull-requests: write
jobs:
  main:
    name: Check for updates
    runs-on: ubuntu-latest
    steps:
      - name: Install JQ
        run: sudo apt-get install jq

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check for updates
        run: |
          #!/bin/bash

          get_latest_version() {
              packageName=$1
              latestVersion=$(curl -s "https://repo.packagist.org/p2/${packageName}.json" | jq -r '.packages["'$packageName'"] | keys[] as $k | .[$k].version' | sort -V | tail -1)
              echo "$latestVersion"
          }

          update_version() {
              packageName=$1
              newVersion=$2
              oldVersion=$3
              escapedPackageName=$(sed 's/[\*\.&\/]/\\&/g' <<< "$packageName")
              escapedOldVersion=$(sed 's/[\*\.&\/]/\\&/g' <<< "$oldVersion")
              escapedNewVersion=$(sed 's/[\*\.&\/]/\\&/g' <<< "$newVersion")
              sed -i '' "s/\"$escapedPackageName\": \"$escapedOldVersion\"/\"$escapedPackageName\": \"$escapedNewVersion\"/g" composer.json
          }

          jq -r 'keys[] as $k | "\($k) \(.[$k])"' composer.json | while read -r key value; do
              if [[ $key == require ]]; then
                  jq -r 'keys[] as $k | "\($k) \(.[$k])"' <<< "$value" | while read -r packageName version; do
                      if [[ $packageName != "php" && $packageName != "ext-json" ]]; then
                          latestVersion=$(get_latest_version "$packageName")
                          if [[ $version != $latestVersion ]]; then
                              echo "Updating $packageName from $version to $latestVersion"
                              update_version "$packageName" "$latestVersion" "$version"
                          fi
                      fi
                  done
              fi
          done
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Commit changes
        run: |
          git config --global user.name "Achyut Neupane"
          git config --global user.email "achyutkneupane@gmail.com"
          git add composer.json
          git commit -m "build(deps): Update dependency versions"
          git push
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
